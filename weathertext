#!/usr/bin/python
# -*- coding: utf-8 -*-

import pywapi
import datetime
import getopt
import sys
import re

# Handle the one option, -t.
datestamp = False
try:
  opts, args = getopt.getopt(sys.argv[1:], 't')
except getopt.GetoptError:
  opts = ()
for o, a in opts:
  if o == '-t':
    datestamp = True
  else:
    datestamp = False

# The date as a string. This is for comparison with forecast dates.
today = datetime.datetime.now() - datetime.timedelta(hours=1)
today = today.strftime("%d %b %Y")
today = re.sub(r'^0(\d)', r'\1', today)   # delete leading zero on day

# Get the current conditions for the given station.
noaa = pywapi.get_weather_from_noaa('KARR')
yahoo = pywapi.get_weather_from_yahoo('60502', '')

# The Yahoo pressure dictionary.
ypressure = {'0': 'steady', '1': 'rising', '2': 'falling'}

# The forecasts
f1 = yahoo['forecasts'][0]
f2 = yahoo['forecasts'][1]
if f1['date'] == today:
  f1str = 'Today'
  f2str = 'Tomorrow'
else:
  f1str = 'Tomorrow'
  f2str = 'Next day'

# This is the list of output lines.
out = []

# Go through the dictionaries and construct a list of the desired output lines.
# out.append('Last update:' + noaa['observation_time'].split(',')[1])
out.append(u'Temperature: %.0f°' % float(noaa['temp_f']))
out.append(yahoo['condition']['text'])
try:
  if float(noaa['wind_gust_mph']) > 0:
    gust = ', gusting to %s mph' % noaa['wind_gust_mph']
  else:
    gust = ''
except KeyError:
  gust = ''
out.append('Wind: %s at %s mph%s' % ( noaa['wind_dir'], noaa['wind_mph'], gust))
try:
  out.append(u'Wind Chill: %s°' % noaa['windchill_f'])
except KeyError:
  pass
out.append('Relative Humidity: %s%%' % noaa['relative_humidity'])
try:
  out.append(u'Heat Index: %s°' % noaa['heat_index_f'])
except KeyError:
  pass
out.append('Pressure: %2.2f and %s' % (float(yahoo['atmosphere']['pressure']), ypressure[yahoo['atmosphere']['rising']]))
out.append('Sunlight: %s to %s' % (yahoo['astronomy']['sunrise'], yahoo['astronomy']['sunset']))
out.append(u'''
%s:
  High: %3d°
  Low:  %3d°
  %s''' % (f1str, int(f1['high']), int(f1['low']), f1['text']))
out.append(u'''
%s:
  High: %3d°
  Low:  %3d°
  %s''' % (f2str, int(f2['high']), int(f2['low']), f2['text']))

# Add the date and time if asked to.
if datestamp:
  out.append(datetime.datetime.now().strftime('\n%a, %b %d %I:%M %p'))
  
print '\n'.join(out).encode('utf8')
